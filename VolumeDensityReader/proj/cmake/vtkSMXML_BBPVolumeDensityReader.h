// Loadable modules
//
// Generated by /home/lasserre/local/ParaView3/build/bin/kwProcessXML
//
#ifndef __BBPVolumeDensityReader_h
#define __BBPVolumeDensityReader_h

#include <string.h>


// From file /home/lasserre/workspace/paraview/dev/bbp/BBPVolumeDensityReader/xml/VolumeDensityReader.xml
static const char* BBPVolumeDensityReaderVolumeDensityReaderInterface0 =
"<ServerManagerConfiguration>\n"
" <ProxyGroup name=\"sources\">\n"
"    <SourceProxy name=\"VolumeDensityReader\" \n"
"                class=\"vtkVolumeDensityReader\"\n"
"                label=\"Blue Brain Experiment Reader for Volume Density Rendering.\">\n"
"     <Documentation\n"
"       short_help=\"Generate vtkImageData with Density Rendering.\"\n"
"       long_help=\"Read the BlueConfig file, create Experiment, BBP-SDK Pipeline and export a vtkImageData.\">\n"
"     </Documentation>\n"
"     <StringVectorProperty\n"
"        name=\"FileName\"\n"
"        command=\"SetFileName\"\n"
"        number_of_elements=\"1\">\n"
"        <FileListDomain name=\"files\"/>\n"
"        <Documentation>\n"
"          This property specifies the file name for the experiment reader.\n"
"        </Documentation>\n"
"     </StringVectorProperty>\n"
"     <StringVectorProperty\n"
"        name=\"Target\"\n"
"        command=\"SetTarget\"\n"
"        number_of_elements=\"1\">\n"
"        <Documentation>\n"
"          This property specifies the target name for the volume density visualization.\n"
"        </Documentation>\n"
"     </StringVectorProperty>\n"
"<!--\n"
"     <StringVectorProperty\n"
"        name=\"SectionType\"\n"
"        command=\"SectionType\"\n"
"        number_of_elements=\"1\">\n"
"        <Documentation>\n"
"          This property specifies the section type for the volume density visualization.\n"
"        </Documentation>\n"
"     </StringVectorProperty>\n"
"-->\n"
"   <!-- End VolumeDensityReader -->\n"
"   </SourceProxy>\n"
" </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* BBPVolumeDensityReaderVolumeDensityReaderGetInterfaces()
{
  size_t len = ( 0
    + strlen(BBPVolumeDensityReaderVolumeDensityReaderInterface0) );
  char* res = new char[ len + 1];
  res[0] = 0;
  strcat(res, BBPVolumeDensityReaderVolumeDensityReaderInterface0);
  return res;
}



#endif
